
configurations {
  doclet
}

repositories {
  maven {
    url 'http://deco2800.uqcloud.net/artifactory/everything'
  }
  ivy {
    url 'http://deco2800.uqcloud.net/artifactory/everything'
  }
}

dependencies {
  doclet group: 'org.jboss.apiviz', name: 'apiviz', version: '1.3.2.GA'
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'eclipse'

  sourceCompatibility = 1.6
  targetCompatibility = 1.6

  repositories {
    maven {
      url 'http://deco2800.uqcloud.net/artifactory/everything'
    }
    ivy {
      url 'http://deco2800.uqcloud.net/artifactory/everything'
    }
  }

  dependencies {
    testCompile group: "junit", name: "junit", version: "4.11"
    testCompile group: "org.mockito", name: "mockito-all", version: "1.9.5"
  }

  version = '1.0'

  jar {
    manifest.attributes provider: 'gradle'
  }

}

task alldocs(type: Javadoc) {
    group 'Documentation'
    description 'Generates aggregated Javadoc API documentation for the main source code of all projects.'

    doFirst {
        subprojects.each { project ->
            project.sourceSets.main.output.each { dir ->
                dir.mkdirs()
            }
        }
    }
    source subprojects.collect { project ->
        project.sourceSets.main.allJava
    }
    destinationDir = new File(buildDir, 'javadoc')
    // Might need a classpath
    classpath = files(subprojects.collect { project ->
        project.sourceSets.main.compileClasspath
    })
    options.addStringOption('sourceclasspath', files(subprojects.collect { project ->
        project.sourceSets.main.output
    }).getAsPath())
    options.showAll()
    configure(options) {
        windowTitle project.name
        docTitle project.name
        links 'http://docs.oracle.com/javase/7/docs/api/'
        doclet 'org.jboss.apiviz.APIviz'
        docletpath file(configurations.doclet.asPath)
    }

}
