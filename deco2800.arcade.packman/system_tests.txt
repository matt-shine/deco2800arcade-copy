System Level Tests for the Package Manager
==========================================

 o   Gradle clean
 o   Gradle build

Server Tests
============

 o   gradle runServer

Server should print 'Creating directory: Release' to logs
Server should print 'Created: Release' to logs
 
 Client Tests
 
 o   gradle releaseArcade
 
 A folder titled 'Release' in the top level directory for the project 
should have been created, and populated with two subfolders: bin and lib.

Navigate to the created bin directory, and run the bat file (if on a Windows 
system) or the shell script (if on a UN*X system).

Client should print 'Creating directory: ..\games'
Client should print 'Created: ..\games'


File Server Tests
=================

 o   gradle clean
 o   gradle build
 o   gradle pack
 o   ls deco2800.arcade.server/Release

Should output list of games with valid VERSION files in their root directories.

Write some code that utilises the fetchGameJar method made available in
deco2800.arcade.client.Arcade

 o   gradle runServer
 o   gradle runArcade (in another console)
 o   Perform action to trigger fetchGameJar call written in above.

Client side should have request .jar file in games directory in project root.

 o   On Server:
 o   unpack200 deco2800.arcade.server/Release/GAME_PATH.tar.gz ./GAME.jar
 o   tar -tvf GAME.jar

Output should list same files (sizes and dates may vary slightly) as:
 o   On Client:
 o   tar -tvf games/GAME.jar
 
 Class Path Tests
 =================
 
 o   gradle clean
 o   gradle build
 o   gradle pack
 o   gradle releaseArcade
 o   gradle runServer

Create a directory, release/games

Copy a .JAR file from a game into release/games
cp deco2800.arcade.pong/build/libs/deco2800.arcade.pong-1.0.jar 
    release/games/pong-1.0.jar

Run the file in release/bin corresponding to your operating system 
(.bat for windows, no file extension for *NIX)

The game should appear in the Game Library (ignoring any library errors).
