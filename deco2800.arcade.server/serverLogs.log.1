[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - update(tableName=REPLAY_SESSIONS, object=table=REPLAY_SESSIONS, cols=[(SESSIONID, INTEGER, noNulls), (GAMEID, VARCHAR, noNulls), (RECORDING, BOOLEAN, noNulls), (USERNAME, VARCHAR, noNulls), (DATETIME, BIGINT, noNulls), (COMMENTS, VARCHAR, noNulls)], pk=[(SESSIONID, INTEGER, noNulls)]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_SESSIONS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_SESSIONS) - end - result=REPLAY_SESSIONS
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_SESSIONS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_SESSIONS) - end - result=REPLAY_SESSIONS
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=REPLAY_SESSIONS, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=REPLAY_SESSIONS, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from REPLAY_SESSIONS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.DeleteAllOperation - Added SQL: delete from REPLAY_SESSIONS
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimpleStatement - executeBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from REPLAY_EVENTS
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from REPLAY_SESSIONS
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimpleStatement - clearBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AbstractBatchStatement - close() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractDataSet - iterator() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_SESSIONS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_SESSIONS) - end - result=REPLAY_SESSIONS
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_EVENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_EVENTS) - end - result=REPLAY_EVENTS
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTableIterator - getTable() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=REPLAY_SESSIONS, columns=[(GameID, UNKNOWN, nullableUnknown), (Recording, UNKNOWN, nullableUnknown), (UserName, UNKNOWN, nullableUnknown), (DateTime, UNKNOWN, nullableUnknown), (Comments, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=REPLAY_SESSIONS, columns=[(GameID, UNKNOWN, nullableUnknown), (Recording, UNKNOWN, nullableUnknown), (UserName, UNKNOWN, nullableUnknown), (DateTime, UNKNOWN, nullableUnknown), (Comments, UNKNOWN, nullableUnknown)], keys=[]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=REPLAY_SESSIONS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseDataSet - initialize() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_SESSIONS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_SESSIONS) - end - result=REPLAY_SESSIONS
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_SESSIONS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_SESSIONS) - end - result=REPLAY_SESSIONS
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getColumns() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getColumns() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Recording) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getColumns() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=UserName) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getColumns() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=DateTime) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getColumns() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Comments) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getColumns() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=REPLAY_SESSIONS, columns=[(GameID, UNKNOWN, nullableUnknown), (Recording, UNKNOWN, nullableUnknown), (UserName, UNKNOWN, nullableUnknown), (DateTime, UNKNOWN, nullableUnknown), (Comments, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=Recording) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=Recording) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Recording) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=UserName) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=UserName) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=UserName) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=DateTime) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=DateTime) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=DateTime) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=Comments) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=Comments) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Comments) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=REPLAY_SESSIONS, columns=[(GAMEID, VARCHAR, noNulls), (RECORDING, BOOLEAN, noNulls), (USERNAME, VARCHAR, noNulls), (DATETIME, BIGINT, noNulls), (COMMENTS, VARCHAR, noNulls)], keys=[(SESSIONID, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=REPLAY_SESSIONS, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=REPLAY_SESSIONS, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=GAMEID, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=GAMEID, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=RECORDING, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=RECORDING, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=USERNAME, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=USERNAME, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=DATETIME, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=DATETIME, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=COMMENTS, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=COMMENTS, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into REPLAY_SESSIONS (GAMEID, RECORDING, USERNAME, DATETIME, COMMENTS) values (?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=GAMEID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=GAMEID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=GAMEID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=pong, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=pong, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=pong, column=1, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value=pong) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value=pong) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=RECORDING) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=RECORDING) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=RECORDING) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=true, dataType=BOOLEAN) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=true, dataType=BOOLEAN) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BooleanDataType - setSqlValue(value=true, column=2, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BooleanDataType - typeCast(value=true) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=USERNAME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=USERNAME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=USERNAME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=max, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=max, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=max, column=3, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value=max) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value=max) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=DATETIME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=DATETIME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=DATETIME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=12407120487, dataType=BIGINT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=12407120487, dataType=BIGINT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=12407120487, column=4, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=12407120487) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=COMMENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=COMMENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=COMMENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Comment, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Comment, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Comment, column=5, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value=Comment) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value=Comment) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=REPLAY_SESSIONS, columns=[(GameID, UNKNOWN, nullableUnknown), (Recording, UNKNOWN, nullableUnknown), (UserName, UNKNOWN, nullableUnknown), (DateTime, UNKNOWN, nullableUnknown), (Comments, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=Recording) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=Recording) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Recording) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=UserName) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=UserName) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=UserName) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=DateTime) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=DateTime) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=DateTime) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=Comments) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=Comments) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Comments) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=GAMEID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=GAMEID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=GAMEID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=pong, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=pong, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=pong, column=1, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value=pong) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value=pong) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=RECORDING) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=RECORDING) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=RECORDING) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=false, dataType=BOOLEAN) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=false, dataType=BOOLEAN) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BooleanDataType - setSqlValue(value=false, column=2, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BooleanDataType - typeCast(value=false) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=USERNAME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=USERNAME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=USERNAME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=ben, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=ben, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=ben, column=3, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value=ben) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value=ben) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=DATETIME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=DATETIME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=DATETIME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=124071204879, dataType=BIGINT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=124071204879, dataType=BIGINT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=124071204879, column=4, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=124071204879) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=COMMENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=COMMENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=COMMENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Another comment, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Another comment, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Another comment, column=5, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value=Another comment) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value=Another comment) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=REPLAY_SESSIONS, columns=[(GameID, UNKNOWN, nullableUnknown), (Recording, UNKNOWN, nullableUnknown), (UserName, UNKNOWN, nullableUnknown), (DateTime, UNKNOWN, nullableUnknown), (Comments, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=Recording) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=Recording) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Recording) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=UserName) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=UserName) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=UserName) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=DateTime) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=DateTime) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=DateTime) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=Comments) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=Comments) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Comments) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=GAMEID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=GAMEID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=GAMEID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=tetris, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=tetris, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=tetris, column=1, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value=tetris) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value=tetris) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=RECORDING) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=RECORDING) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=RECORDING) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=true, dataType=BOOLEAN) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=true, dataType=BOOLEAN) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BooleanDataType - setSqlValue(value=true, column=2, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BooleanDataType - typeCast(value=true) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=USERNAME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=USERNAME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=USERNAME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=max, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=max, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=max, column=3, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value=max) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value=max) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=DATETIME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=DATETIME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=DATETIME) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1240712879, dataType=BIGINT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1240712879, dataType=BIGINT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BigIntegerDataType - setSqlValue(value=1240712879, column=4, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.BigIntegerDataType - typeCast(value=1240712879) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=COMMENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=COMMENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=COMMENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=DECO is fun, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=DECO is fun, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=DECO is fun, column=5, statement=8c8b0219-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value=DECO is fun) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value=DECO is fun) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=REPLAY_SESSIONS, columns=[(GameID, UNKNOWN, nullableUnknown), (Recording, UNKNOWN, nullableUnknown), (UserName, UNKNOWN, nullableUnknown), (DateTime, UNKNOWN, nullableUnknown), (Comments, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=3], row=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=3, column=GameID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=3) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTableIterator - getTable() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=REPLAY_EVENTS, columns=[(SessionID, UNKNOWN, nullableUnknown), (EventIndex, UNKNOWN, nullableUnknown), (Event, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=REPLAY_EVENTS, columns=[(SessionID, UNKNOWN, nullableUnknown), (EventIndex, UNKNOWN, nullableUnknown), (Event, UNKNOWN, nullableUnknown)], keys=[]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=REPLAY_EVENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseDataSet - initialize() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_EVENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_EVENTS) - end - result=REPLAY_EVENTS
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_EVENTS) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=REPLAY_EVENTS) - end - result=REPLAY_EVENTS
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getColumns() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getColumns() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EventIndex) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getColumns() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Event) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getColumns() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=REPLAY_EVENTS, columns=[(SessionID, UNKNOWN, nullableUnknown), (EventIndex, UNKNOWN, nullableUnknown), (Event, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=EventIndex) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=EventIndex) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EventIndex) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=Event) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=Event) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Event) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=REPLAY_EVENTS, columns=[(SESSIONID, INTEGER, noNulls), (EVENTINDEX, INTEGER, noNulls), (EVENT, VARCHAR, noNulls)], keys=[(EVENTID, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=REPLAY_EVENTS, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=REPLAY_EVENTS, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=SESSIONID, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=SESSIONID, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=EVENTINDEX, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EVENTINDEX, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=EVENT, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=EVENT, escapePattern=null) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into REPLAY_EVENTS (SESSIONID, EVENTINDEX, EVENT) values (?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=SESSIONID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=SESSIONID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=SESSIONID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=ad97c21b-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=EVENTINDEX) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=EVENTINDEX) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EVENTINDEX) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=0, dataType=INTEGER) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=0, dataType=INTEGER) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=0, column=2, statement=ad97c21b-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=0, column=EVENT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=EVENT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EVENT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value={"nodeTime":1750,"type":"bat_move","items":{"y_coord":{"type":1,"data":193}}}, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value={"nodeTime":1750,"type":"bat_move","items":{"y_coord":{"type":1,"data":193}}}, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value={"nodeTime":1750,"type":"bat_move","items":{"y_coord":{"type":1,"data":193}}}, column=3, statement=ad97c21b-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value={"nodeTime":1750,"type":"bat_move","items":{"y_coord":{"type":1,"data":193}}}) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value={"nodeTime":1750,"type":"bat_move","items":{"y_coord":{"type":1,"data":193}}}) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=REPLAY_EVENTS, columns=[(SessionID, UNKNOWN, nullableUnknown), (EventIndex, UNKNOWN, nullableUnknown), (Event, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=EventIndex) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=EventIndex) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EventIndex) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=Event) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=Event) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=Event) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=SESSIONID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=SESSIONID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=SESSIONID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=ad97c21b-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=EVENTINDEX) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=EVENTINDEX) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EVENTINDEX) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=2, statement=ad97c21b-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=1, column=EVENT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=EVENT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=EVENT) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value={"nodeTime":1795,"type":"bat_move","items":{"y_coord":{"type":1,"data":205}}}, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addValue(value={"nodeTime":1795,"type":"bat_move","items":{"y_coord":{"type":1,"data":205}}}, dataType=VARCHAR) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - setSqlValue(value={"nodeTime":1795,"type":"bat_move","items":{"y_coord":{"type":1,"data":205}}}, column=3, statement=ad97c21b-0141-d83b-2ce3-000004c79928) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.DataType - asString(value={"nodeTime":1795,"type":"bat_move","items":{"y_coord":{"type":1,"data":205}}}) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.datatype.StringDataType - typeCast(value={"nodeTime":1795,"type":"bat_move","items":{"y_coord":{"type":1,"data":205}}}) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=REPLAY_EVENTS, columns=[(SessionID, UNKNOWN, nullableUnknown), (EventIndex, UNKNOWN, nullableUnknown), (Event, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.DefaultTable - getValue(row=2, column=SessionID) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=2) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.DefaultOperationListener - operationSetUpFinished(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=org.apache.derby.impl.jdbc.EmbedConnection40@840577184 (XID = 3849), (SESSIONID = 295), (DATABASE = Arcade), (DRDAID = null) , super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@78c70f32, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@556e7212, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@3085a863], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@16f21478, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@6f1dde0c, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
[21/37/13 09:37:52] [Test worker] org.dbunit.database.DatabaseConnection - close() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.AbstractDatabaseTester - onTearDown() - start
[21/37/13 09:37:52] [Test worker] org.dbunit.AbstractDatabaseTester - executeOperation(operation=org.dbunit.operation.DatabaseOperation$DummyOperation@798a62f6) - start
[21/42/13 09:42:07] [main] deco2800.server.ArcadeServer - gameStorage added to ArcadeServer
[21/42/13 09:42:11] [main] deco2800.server.ArcadeServer - creditStorage added to ArcadeServer
[21/42/13 09:42:11] [main] deco2800.server.ArcadeServer - replayStorage added to ArcadeServer
[21/42/13 09:42:11] [main] deco2800.server.ArcadeServer - chatStorage added to ArcadeServer
[21/42/13 09:42:11] [main] deco2800.server.ArcadeServer - imageStorage added to ArcadeServer
[21/42/13 09:42:11] [main] deco2800.server.ArcadeServer - achievementStorage added to ArcadeServer
[21/42/13 09:42:11] [main] deco2800.server.ArcadeServer - highscoreDatabase added to ArcadeServer
[21/42/13 09:42:11] [main] deco2800.server.ArcadeServer - matchmakerQueue added to ArcadeServer
[21/42/13 09:42:11] [main] deco2800.arcade.packman.PackageServer - Creating directory: Release
[21/42/13 09:42:11] [main] deco2800.arcade.packman.PackageServer - Created: Release
[21/42/13 09:42:11] [main] deco2800.server.ArcadeServer - PackageServer added to ArcadeServer
[21/42/13 09:42:11] [main] deco2800.server.ArcadeServer - Added all databases to Server, about to initialise them
[21/42/13 09:42:11] [main] deco2800.server.ArcadeServer - highscoreDatabase initialised
[21/42/13 09:42:13] [main] deco2800.server.ArcadeServer - gameStorage initialised
[21/42/13 09:42:13] [main] deco2800.server.ArcadeServer - creditStorage initialised
[21/42/13 09:42:13] [main] deco2800.server.database.ImageStorage - ImageStorage about to be initialised
[21/42/13 09:42:13] [main] deco2800.server.database.ImageStorage - Attempting to associate id: ImageStorage.reserved.UNKNOWN_IMAGE with an image
[21/42/13 09:42:14] [main] deco2800.server.database.ImageStorage - Attempting to associate id: ImageStorage.reserved.GENERIC_AVATER with an image
[21/42/13 09:42:14] [main] deco2800.server.ArcadeServer - imageStorage initialised
[21/42/13 09:42:14] [main] deco2800.server.database.AchievementStorage - Achivement Storage sucessfully initialised.
[21/42/13 09:42:15] [main] deco2800.server.ArcadeServer - achievementStorage initialised
[21/42/13 09:42:15] [main] deco2800.server.database.AchievementStorage - Achievement Dead's icon doesn't exist at path: burningskies/some.png
[21/42/13 09:42:15] [main] deco2800.server.database.AchievementStorage - Achievement: Dead added
[21/42/13 09:42:15] [main] deco2800.server.database.ImageStorage - Attempting to associate id: chess/winner.png with an image
[21/42/13 09:42:16] [main] deco2800.server.database.AchievementStorage - Achievement: Winner! added
[21/42/13 09:42:16] [main] deco2800.server.database.ImageStorage - Attempting to associate id: chess/chessMenu.png with an image
[21/42/13 09:42:16] [main] deco2800.server.database.AchievementStorage - Achievement: start added
[21/42/13 09:42:16] [main] deco2800.server.database.AchievementStorage - Achievement 360 overlay check's icon doesn't exist at path: chess/youwon
[21/42/13 09:42:16] [main] deco2800.server.database.AchievementStorage - Achievement: 360 overlay check added
[21/42/13 09:42:16] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/fork and knife achieved.png with an image
[21/42/13 09:42:16] [main] deco2800.server.database.AchievementStorage - Achievement: Beginnings added
[21/42/13 09:42:16] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/fork and knife achieved.png with an image
[21/42/13 09:42:17] [main] deco2800.server.database.AchievementStorage - Achievement: Play 10 Games added
[21/42/13 09:42:17] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/fork and knife achieved.png with an image
[21/42/13 09:42:18] [main] deco2800.server.database.AchievementStorage - Achievement: Expert added
[21/42/13 09:42:18] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/arrow achieved.png with an image
[21/42/13 09:42:18] [main] deco2800.server.database.AchievementStorage - Achievement: Godlike Hunter added
[21/42/13 09:42:18] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/potion 1 achieved.png with an image
[21/42/13 09:42:18] [main] deco2800.server.database.AchievementStorage - Achievement: 100m Sprint added
[21/42/13 09:42:18] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/potion 2 achieved.png with an image
[21/42/13 09:42:19] [main] deco2800.server.database.AchievementStorage - Achievement: 200m Sprint added
[21/42/13 09:42:19] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/potion 3 achieved.png with an image
[21/42/13 09:42:19] [main] deco2800.server.database.AchievementStorage - Achievement: 400m Sprint added
[21/42/13 09:42:19] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/potion 1 achieved.png with an image
[21/42/13 09:42:19] [main] deco2800.server.database.AchievementStorage - Achievement: 800m Sprint added
[21/42/13 09:42:19] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/yay.png with an image
[21/42/13 09:42:20] [main] deco2800.server.database.AchievementStorage - Achievement: Marathoner added
[21/42/13 09:42:20] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/heart achieved.png with an image
[21/42/13 09:42:20] [main] deco2800.server.database.AchievementStorage - Achievement: SUPERPOWERED added
[21/42/13 09:42:20] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/points achieved.png with an image
[21/42/13 09:42:20] [main] deco2800.server.database.AchievementStorage - Achievement: HOLLA HOLLA GET DOLLA added
[21/42/13 09:42:20] [main] deco2800.server.database.ImageStorage - Attempting to associate id: hunter/spear achieved.png with an image
[21/42/13 09:42:20] [main] deco2800.server.database.AchievementStorage - Achievement: Pickup all weapons added
[21/42/13 09:42:20] [main] deco2800.server.database.ImageStorage - Attempting to associate id: junglejump/banana_king.png with an image
[21/42/13 09:42:20] [main] deco2800.server.database.AchievementStorage - Achievement: Banana King added
[21/42/13 09:42:20] [main] deco2800.server.database.ImageStorage - Attempting to associate id: junglejump/world_champion.png with an image
[21/42/13 09:42:21] [main] deco2800.server.database.AchievementStorage - Achievement: World Champion added
[21/42/13 09:42:21] [main] deco2800.server.database.ImageStorage - Attempting to associate id: junglejump/hax.png with an image
[21/42/13 09:42:21] [main] deco2800.server.database.AchievementStorage - Achievement: Hax added
[21/42/13 09:42:21] [main] deco2800.server.database.ImageStorage - Attempting to associate id: junglejump/zombie_monkey.png with an image
[21/42/13 09:42:21] [main] deco2800.server.database.AchievementStorage - Achievement: Zombiemonkey added
[21/42/13 09:42:21] [main] deco2800.server.database.AchievementStorage - Achievement Virgin Winner's icon doesn't exist at path: null
[21/42/13 09:42:21] [main] deco2800.server.database.AchievementStorage - Achievement: Virgin Winner added
[21/42/13 09:42:21] [main] deco2800.server.database.AchievementStorage - Achievement Perfect!'s icon doesn't exist at path: null
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Perfect! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Lucky 10's icon doesn't exist at path: null
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Lucky 10 added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Land Conqueror's icon doesn't exist at path: null
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Land Conqueror added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Noob Progression's icon doesn't exist at path: minigolf/youwon
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Noob Progression added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Makrsman's icon doesn't exist at path: minigolf/youwon
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Makrsman added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement 360 Overlay Check's icon doesn't exist at path: minigolf/youwon
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: 360 Overlay Check added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Who needs a map's icon doesn't exist at path: minigolf/youwon
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Who needs a map added
[21/42/13 09:42:22] [main] deco2800.server.database.ImageStorage - Attempting to associate id: mixmaze/mixmaze.playa.png with an image
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Playa! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Amateur!'s icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Amateur! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Veteran!'s icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Veteran! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Eyes On Me!'s icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Eyes On Me! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Rising Star!'s icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Rising Star! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement On Fire!'s icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: On Fire! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Think Big!'s icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Think Big! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Strategist!'s icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Strategist! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Breaking Good's icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Breaking Good added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement Lets blow things up!'s icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Lets blow things up! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement There goes your wall!'s icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: There goes your wall! added
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement BOOM!'s icon doesn't exist at path: mixmaze/
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: BOOM! added
[21/42/13 09:42:22] [main] deco2800.server.database.ImageStorage - Attempting to associate id: pong/winner.png with an image
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Winner! added
[21/42/13 09:42:22] [main] deco2800.server.database.ImageStorage - Attempting to associate id: pong/winner.png with an image
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Master of Boredom added
[21/42/13 09:42:22] [main] deco2800.server.database.ImageStorage - Attempting to associate id: pong/winner.png with an image
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Slider added
[21/42/13 09:42:22] [main] deco2800.server.database.ImageStorage - Attempting to associate id: pong/winner.png with an image
[21/42/13 09:42:22] [main] deco2800.server.database.AchievementStorage - Achievement: Win 5 points added
[21/42/13 09:42:22] [main] deco2800.server.ArcadeServer - Achievement Data loaded into database
[21/42/13 09:42:22] [main] deco2800.server.ArcadeServer - All databases added and initialised, ArcadeServer Started
[21/42/13 09:42:23] [main] deco2800.server.ArcadeServer - Server starting
[21/42/13 09:42:23] [main] deco2800.server.ArcadeServer - Server bound, TCP_PORT: 54555, UDP_PORT: 54777
[21/42/13 09:42:23] [main] deco2800.server.ArcadeServer - File Server starting
[21/42/13 09:42:23] [main] deco2800.server.ArcadeServer - File Server bound, TCP_PORT: 54555, UDP_PORT: 54777
[21/43/13 09:43:19] [Server] deco2800.arcade.packman.PackageServer - PACKMAN: Client connection success
[21/06/13 10:06:17] [main] deco2800.server.ArcadeServer - gameStorage added to ArcadeServer
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - creditStorage added to ArcadeServer
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - replayStorage added to ArcadeServer
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - chatStorage added to ArcadeServer
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - imageStorage added to ArcadeServer
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - achievementStorage added to ArcadeServer
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - highscoreDatabase added to ArcadeServer
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - matchmakerQueue added to ArcadeServer
[21/06/13 10:06:24] [main] deco2800.arcade.packman.PackageServer - Creating directory: Release
[21/06/13 10:06:24] [main] deco2800.arcade.packman.PackageServer - Created: Release
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - PackageServer added to ArcadeServer
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - Added all databases to Server, about to initialise them
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - highscoreDatabase initialised
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - gameStorage initialised
[21/06/13 10:06:24] [main] deco2800.server.ArcadeServer - creditStorage initialised
[21/06/13 10:06:24] [main] deco2800.server.database.ImageStorage - ImageStorage about to be initialised
[21/06/13 10:06:25] [main] deco2800.server.database.ImageStorage - Attempting to associate id: ImageStorage.reserved.UNKNOWN_IMAGE with an image
